# Backend Dockerfile with LLM Integration Support
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    git \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY pyproject.toml uv.lock ./

# Install uv for faster dependency management
RUN pip install uv

# Install dependencies (including LLM packages)
RUN uv sync --frozen

# Create directories for LLM configuration and caching
RUN mkdir -p /app/config/llm \
             /app/config/prompts \
             /app/cache/llm \
             /app/logs

# Copy source code
COPY src/ ./src/
COPY main.py ./

# Copy default LLM configurations
COPY config/llm/ ./config/llm/
COPY config/prompts/ ./config/prompts/

# Create non-root user and set permissions
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app/config && \
    chmod -R 755 /app/cache && \
    chmod -R 755 /app/logs

USER appuser

# Expose ports
EXPOSE 8000 9090

# Environment variables with defaults
ENV LLM_CONFIG_PATH="/app/config/llm" \
    PROMPT_CONFIG_PATH="/app/config/prompts" \
    CACHE_DIR="/app/cache" \
    LOG_DIR="/app/logs" \
    PYTHONPATH="/app" \
    PYTHONUNBUFFERED=1

# Health check (includes LLM provider status)
HEALTHCHECK --interval=30s --timeout=15s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["uv", "run", "uvicorn", "src.covibe.api.main:app", "--host", "0.0.0.0", "--port", "8000"]